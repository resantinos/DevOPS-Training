pipeline {
    agent any
    environment {
        DEPLOYMENT_FILE = './workdir/Kubernetes/deployment.yaml' // Path to your Kubernetes deployment YAML file
        LB_FILE = './workdir/Kubernetes/lb.yaml' // Path to your loadbalancer YAML file
        REPO_URL = 'https://github.com/resantinos/DevOPS-Training-DigitalOcean.git'
    }
    stages {
        stage('Clone Repository') {
            steps {
                // Clone the public GitHub repository
                sh "rm -rf ./workdir"
                sh "mkdir ./workdir"
                sh "git clone ${REPO_URL} ./workdir"
            }
        }

        stage('Authenticate with DOCTL') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'token', variable: 'TOKEN')]) {
                        // explort token to env
                        env.DIGITALOCEAN_ACCESS_TOKEN = "${TOKEN}"
                    }
                    withCredentials([string(credentialsId: 'cluster', variable: 'CLUSTER_ID')]) {
                        sh "doctl kubernetes cluster kubeconfig save ${CLUSTER_ID}"
                    }                  
                }
            }
        }

         stage('Verify kubectl is working') {
            steps {
                script {
                    sh "kubectl get all"
                }
            }
        }
        stage('Deploy Grafana and Prometheus with Helm') {
            steps {
                script {

                    sh "helm repo add grafana https://grafana.github.io/helm-charts"
                    sh "helm repo add prometheus-community https://prometheus-community.github.io/helm-charts"
                    sh "helm repo update"
                    sh "helm install grafana grafana/grafana --namespace monitoring --create-namespace"
                    sh "helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring"

                }
            }
        }
    }
}