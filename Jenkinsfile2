pipeline {
    agent any

    environment {
        // Define the Docker image name and tag
        IMAGE_NAME = 'imagination'
        IMAGE_TAG = 'latest'
        // Repository URL
        REPO_URL = 'https://github.com/resantinos/public.git'
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone the public GitHub repository
                sh "rm -rf ./gitara2"
                sh "mkdir ./gitara2"
                sh "git clone ${REPO_URL} ./gitara2"
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    // Use withCredentials to securely log in to Docker
                    withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login registry.digitalocean.com -u "$DOCKER_USERNAME" --password-stdin'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Ensure Docker is available
                    sh 'docker --version'
                    // Build the Docker image from the Dockerfile in the cloned repo
                    sh "docker build -t registry.digitalocean.com/qwerty/${IMAGE_NAME}:${IMAGE_TAG} ./gitara2"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker push registry.digitalocean.com/qwerty/${IMAGE_NAME}:${IMAGE_TAG}"
                    sh 'docker image list'
                }
            }
        }
    }
    post {
        success {
            echo 'Build succeeded.'

        }
        failure {
            echo 'Build failed.'
        }
    }
}
